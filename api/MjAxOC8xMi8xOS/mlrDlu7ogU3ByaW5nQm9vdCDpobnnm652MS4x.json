{"title":"新建 SpringBoot 项目","date":"2018-12-19T14:29:24.874Z","date_formatted":{"ll":"2018年12月19日","L":"2018/12/19","MM-DD":"12-19"},"link":"2018/12/19/新建 SpringBoot 项目v1.1","tags":["Java","SpringBoot","后台框架"],"categories":["SpringBoot"],"updated":"2019-03-10T16:04:34.036Z","content":"<!-- build time:Sun Aug 23 2020 20:59:41 GMT+0800 (GMT+08:00) --><p>学习 Spring Boot 的第一步，从 hello world 开始。</p><a id=\"more\"></a><h1 id=\"在-idea-里面新建-SpringBoot-项目\">在 idea 里面新建 SpringBoot 项目<a href=\"2018/12/19/新建 SpringBoot 项目v1.1#在-idea-里面新建-SpringBoot-项目\"></a></h1><h2 id=\"操作步骤\">操作步骤<a href=\"2018/12/19/新建 SpringBoot 项目v1.1#操作步骤\"></a></h2><h3 id=\"新建工程：File-–-gt-New-–-gt-Project\">新建工程：File –&gt; New –&gt; Project<a href=\"2018/12/19/新建 SpringBoot 项目v1.1#新建工程：File-–-gt-New-–-gt-Project\"></a></h3><p><img src=\"http://pjvww66h2.bkt.clouddn.com/FpcYeU61v7g_U0YBE8R9qqn6DKUh\" alt=\"\" class=\"article-img\"></p><h3 id=\"类型选择-Spring-Initializer，SDK-若没有需要点击-New-引入-JDK，Initializer-Service-选择-default，点击-Next\">类型选择 Spring Initializer，SDK 若没有需要点击 New 引入 JDK，Initializer Service 选择 default，点击 Next<a href=\"2018/12/19/新建 SpringBoot 项目v1.1#类型选择-Spring-Initializer，SDK-若没有需要点击-New-引入-JDK，Initializer-Service-选择-default，点击-Next\"></a></h3><p><img src=\"http://pjvww66h2.bkt.clouddn.com/FrtJla5CT5iuiqhQXQn0AWQsAg6S\" alt=\"\" class=\"article-img\"></p><h3 id=\"Artifact-可自定义，项目名默认和-Artifact-一致-点击-Next\">Artifact 可自定义，项目名默认和 Artifact 一致,点击 Next<a href=\"2018/12/19/新建 SpringBoot 项目v1.1#Artifact-可自定义，项目名默认和-Artifact-一致-点击-Next\"></a></h3><p><img src=\"http://pjvww66h2.bkt.clouddn.com/FuQMzQ2s3ijYBEfPAkCA4nmrc2D7\" alt=\"\" class=\"article-img\"></p><h3 id=\"依赖-Web-模块，点击-Next\">依赖 Web 模块，点击 Next<a href=\"2018/12/19/新建 SpringBoot 项目v1.1#依赖-Web-模块，点击-Next\"></a></h3><p><img src=\"http://pjvww66h2.bkt.clouddn.com/FiLEbViqffTLwNWKnQ7F0Fg6rWRP\" alt=\"\" class=\"article-img\"></p><h3 id=\"工程在本地存放的路径可自定义，点击-Finish\">工程在本地存放的路径可自定义，点击 Finish<a href=\"2018/12/19/新建 SpringBoot 项目v1.1#工程在本地存放的路径可自定义，点击-Finish\"></a></h3><p><img src=\"http://pjvww66h2.bkt.clouddn.com/Fm6znRwVXFed5WVywHOdu9UU7kQT\" alt=\"\" class=\"article-img\"></p><p>生成的工程目录结构和一般的 maven 项目的目录结构大致相同。相比一般的 maven 项目，SpringBoot 项目多了一些文件，主要有：</p><p>一个应用入口类：src/main/java/com/example/demo1/Demo1Application.java</p><p>存放静态资源的文件夹：src/main/resources/static</p><p>存放模板的文件夹：src/main/resources/templates</p><p>一个空的配置文件：src/main/resources/application.properties</p><p>SpringBoot 默认会从 resource 下面的 application.properties 配置文件中读取配置信息</p><p><img src=\"http://pjvww66h2.bkt.clouddn.com/FtglbB0FNCeORE3WMbnR6YP_VWMV\" alt=\"\" class=\"article-img\"></p><p>pom.xml 中自动引入了两个依赖包</p><p>spring-boot-starter-web:【web模块】</p><p>spring-boot-starter-test【 测试模块】</p><p>以及 maven 插件【spring-boot-maven-plugin】</p><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;dependencies&gt;</span><br><span class=\"line\">    &lt;dependency&gt;</span><br><span class=\"line\">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class=\"line\">    &lt;/dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;dependency&gt;</span><br><span class=\"line\">        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</span><br><span class=\"line\">        &lt;scope&gt;test&lt;/scope&gt;</span><br><span class=\"line\">    &lt;/dependency&gt;</span><br><span class=\"line\">&lt;/dependencies&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;build&gt;</span><br><span class=\"line\">    &lt;plugins&gt;</span><br><span class=\"line\">        &lt;plugin&gt;</span><br><span class=\"line\">            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">        &lt;/plugin&gt;</span><br><span class=\"line\">    &lt;/plugins&gt;</span><br><span class=\"line\">&lt;/build&gt;</span><br></pre></td></tr></table></div></figure><p>@SpringBootApplication 注解表明 Demo1Application 为启动类</p><p>@SpringBootApplication 等价于</p><p>@Configuration + @EnableAutoConfiguration + @ComponentScan</p><p>@Configuration 注解表明该类为配置类</p><p>@EnableAutoConfiguration 注解表明能够自动配置 Spring 的上下文</p><p>@ComponentScan 注解表明 Spring 会自动扫描指定路径下的所有声明 @Component 的类，并自动注册为对象</p><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.example.demo1;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.SpringApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo1Application</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        SpringApplication.run(Demo1Application.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure><p>增加一个 controller mapping</p><p>@RestController 表明 Demo1Application 是一个 controller，并且其中的所有方法都以 json 格式返回给前端页面</p><p>@RequestMapping(“/hello”) 表明前端访问 /hello 地址的请求会映射到 controllerOne 方法来处理</p><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.example.demo1;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.SpringApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo1Application</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        SpringApplication.run(Demo1Application.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/hello\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">controllerOne</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"This is contollerOne!\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure><h3 id=\"直接运行-main-方法，可启动项目\">直接运行 main 方法，可启动项目<a href=\"2018/12/19/新建 SpringBoot 项目v1.1#直接运行-main-方法，可启动项目\"></a></h3><p>控制台会打印出当前项目部署的端口及路径</p><p>默认为 localhost:8080</p><p><img src=\"http://pjvww66h2.bkt.clouddn.com/FhSXnHdYflxs82wNokdsthPPQsNb\" alt=\"\" class=\"article-img\"></p><h3 id=\"浏览器输入localhost-8080-hello\">浏览器输入localhost:8080/hello<a href=\"2018/12/19/新建 SpringBoot 项目v1.1#浏览器输入localhost-8080-hello\"></a></h3><p><img src=\"http://pjvww66h2.bkt.clouddn.com/Fi74j6ZEV4OUcCiqlt9YQhJpq02u\" alt=\"\" class=\"article-img\"></p><h2 id=\"总结\">总结<a href=\"2018/12/19/新建 SpringBoot 项目v1.1#总结\"></a></h2><p>SpringBoot 大量依赖注解，web 项目不再需要写 web 相关的配置文件</p><p>内置了 tomcat ，启动时更简单了，不再需要配置 tomcat</p><p>默认生成配置文件 application.properties，默认会从该文件读取配置</p><h2 id=\"下期预告\">下期预告<a href=\"2018/12/19/新建 SpringBoot 项目v1.1#下期预告\"></a></h2><p>创建一个 vue 项目</p><!-- rebuild by neat -->","prev":{"title":"使用 Github Pages + Hexo 搭建博客","link":"2018/12/20/使用 Github Pages + Hexo 搭建博客"},"plink":"https://www.jayli.cn/2018/12/19/新建 SpringBoot 项目v1.1/","toc":[{"title":"在 idea 里面新建 SpringBoot 项目","id":"在-idea-里面新建-SpringBoot-项目","index":"1","children":[{"title":"操作步骤","id":"操作步骤","index":"1.1","children":[{"title":"新建工程：File –&gt; New –&gt; Project","id":"新建工程：File-–-gt-New-–-gt-Project","index":"1.1.1"},{"title":"类型选择 Spring Initializer，SDK 若没有需要点击 New 引入 JDK，Initializer Service 选择 default，点击 Next","id":"类型选择-Spring-Initializer，SDK-若没有需要点击-New-引入-JDK，Initializer-Service-选择-default，点击-Next","index":"1.1.2"},{"title":"Artifact 可自定义，项目名默认和 Artifact 一致,点击 Next","id":"Artifact-可自定义，项目名默认和-Artifact-一致-点击-Next","index":"1.1.3"},{"title":"依赖 Web 模块，点击 Next","id":"依赖-Web-模块，点击-Next","index":"1.1.4"},{"title":"工程在本地存放的路径可自定义，点击 Finish","id":"工程在本地存放的路径可自定义，点击-Finish","index":"1.1.5"},{"title":"直接运行 main 方法，可启动项目","id":"直接运行-main-方法，可启动项目","index":"1.1.6"},{"title":"浏览器输入localhost:8080/hello","id":"浏览器输入localhost-8080-hello","index":"1.1.7"}]},{"title":"总结","id":"总结","index":"1.2"},{"title":"下期预告","id":"下期预告","index":"1.3"}]}],"copyright":{"link":"<a href=\"https://www.jayli.cn/2018/12/19/新建 SpringBoot 项目v1.1/\" title=\"新建 SpringBoot 项目\">https://www.jayli.cn/2018/12/19/新建 SpringBoot 项目v1.1/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","published":"2018年12月19日","author":"Jayli"}}