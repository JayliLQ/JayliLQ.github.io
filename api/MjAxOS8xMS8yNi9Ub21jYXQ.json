{"title":"Tomcat 原理","date":"2019-11-26T13:35:57.000Z","date_formatted":{"ll":"2019年11月26日","L":"2019/11/26","MM-DD":"11-26"},"link":"2019/11/26/Tomcat","tags":["Java"],"categories":["Java"],"updated":"2019-11-26T13:44:31.939Z","content":"<!-- build time:Sun Aug 23 2020 20:59:40 GMT+0800 (GMT+08:00) --><p>Tomcat 是 Web 容器，Servlet 容器。是 J2EE 规范，在 Java 环境下支持 Web 开发</p><a id=\"more\"></a><h2 id=\"Java-的-Socket-网络编程\">Java 的 Socket 网络编程<a href=\"2019/11/26/Tomcat#Java-的-Socket-网络编程\"></a></h2><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ServerSocket<span class=\"built_in\"> server </span>= new ServerSocket(8080);</span><br><span class=\"line\"><span class=\"keyword\">while</span>(<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">  Socket<span class=\"built_in\"> client </span>= server.accept();</span><br><span class=\"line\">  InputStream <span class=\"keyword\">in</span> = client.getInputStream();</span><br><span class=\"line\">  byte[] buff = new byte[1024];</span><br><span class=\"line\">  int len = 0;</span><br><span class=\"line\">  String content = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ((len = is.read(buff)) &gt; 0) &#123;</span><br><span class=\"line\">      content = new String(buff, 0, len);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  OutputStream out = client.getOutputStream();</span><br><span class=\"line\">  StringBuffer sb = new StringBuffer();</span><br><span class=\"line\">  sb.append(<span class=\"string\">\"HTTP/1.1 \"</span>+ 200 + <span class=\"string\">\"OK\\n\"</span>);</span><br><span class=\"line\">  sb.append(<span class=\"string\">\"Content-Type: text/html;\\n\"</span>);</span><br><span class=\"line\">  sb.append(<span class=\"string\">\"\\r\\n\"</span>);</span><br><span class=\"line\">  sb.append(<span class=\"string\">\"Hello, Tomcat!\"</span>);</span><br><span class=\"line\">  out.write(sb.toString().getBytes());</span><br><span class=\"line\">  out.close();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure><h2 id=\"浏览器请求必须的参数\">浏览器请求必须的参数<a href=\"2019/11/26/Tomcat#浏览器请求必须的参数\"></a></h2><ol><li>Request：浏览器发送的请求包含所有信息的封装</li><li>Response：服务器要向浏览器响应信息的封装</li><li>Servlet：处理得到请求以后的 Java 执行逻辑，service()</li></ol><p>Tomcat url 和 Servlet 的关联关系被保存起来了，Servlet 容器保存了所有的 Servlet 对象</p><h2 id=\"Tomcat-处理请求步骤\">Tomcat 处理请求步骤<a href=\"2019/11/26/Tomcat#Tomcat-处理请求步骤\"></a></h2><ol><li>Web App 的 web.xml 文件加载进来，完成 url 和 Servlet 的映射关系</li><li>启动 ServletSocket 监听 8080</li><li>获取客户端 Socket 对象，解析 HTTP 请求的协议内容，封装成 Request 对象。拼装 HTTP 响应的协议内容，封装成 Response 对象</li><li>通过 URL 找到对应的 Servlet，用反射调用 Servlet 的 service() 方法，执行自定义逻辑。doGet()/doPost()</li></ol><!-- rebuild by neat -->","prev":{"title":"Json errors","link":"2019/12/01/errors"},"next":{"title":"EasyExcel插入指定大小图片","link":"2019/11/25/EasyExcel插入指定大小图片"},"plink":"https://www.jayli.cn/2019/11/26/Tomcat/","toc":[{"title":"Java 的 Socket 网络编程","id":"Java-的-Socket-网络编程","index":"1"},{"title":"浏览器请求必须的参数","id":"浏览器请求必须的参数","index":"2"},{"title":"Tomcat 处理请求步骤","id":"Tomcat-处理请求步骤","index":"3"}],"copyright":{"link":"<a href=\"https://www.jayli.cn/2019/11/26/Tomcat/\" title=\"Tomcat 原理\">https://www.jayli.cn/2019/11/26/Tomcat/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","published":"2019年11月26日","author":"Jayli"}}