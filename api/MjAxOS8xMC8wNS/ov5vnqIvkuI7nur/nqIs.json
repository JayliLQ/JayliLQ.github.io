{"title":"进程与线程","date":"2019-10-05T15:10:52.000Z","date_formatted":{"ll":"2019年10月5日","L":"2019/10/05","MM-DD":"10-05"},"link":"2019/10/05/进程与线程","tags":["Java"],"categories":["Java"],"updated":"2019-12-02T15:16:42.874Z","content":"<!-- build time:Sun Aug 23 2020 21:12:13 GMT+0800 (GMT+08:00) --><a id=\"more\"></a><h3 id=\"进程和线程的区别\">进程和线程的区别<a href=\"2019/10/05/进程与线程#进程和线程的区别\"></a></h3><p>线程是 CPU 最小的调度单元</p><p>一个进程可以开启多个线程</p><h3 id=\"线程的-start-和-run-方法的区别\">线程的 start 和 run 方法的区别<a href=\"2019/10/05/进程与线程#线程的-start-和-run-方法的区别\"></a></h3><p>start 会【调用 JVM_StartThread】创建一个新的子线程并启动</p><p>run 只是 Thread 的一个普通方法调用</p><h3 id=\"Thread-和-Runnable-的关系\">Thread 和 Runnable 的关系<a href=\"2019/10/05/进程与线程#Thread-和-Runnable-的关系\"></a></h3><p>Thread 类实现了 Runnable 接口</p><h3 id=\"创建线程的方法：\">创建线程的方法：<a href=\"2019/10/05/进程与线程#创建线程的方法：\"></a></h3><ol><li><p>实现 Runnable 接口 （推荐）</p></li><li><p>继承 Thread 类</p></li></ol><h3 id=\"如何实现处理线程的返回值\">如何实现处理线程的返回值<a href=\"2019/10/05/进程与线程#如何实现处理线程的返回值\"></a></h3><ol><li><p>主线程等待法</p></li><li><p>使用 Thread.join() 阻塞当前线程以等待子线程处理完毕</p></li><li><p>通过 Callable 接口实现，通过 FutureTask or 线程池获取</p></li></ol><h3 id=\"线程的状态\">线程的状态<a href=\"2019/10/05/进程与线程#线程的状态\"></a></h3><ol><li><p>新建【new】</p></li><li><p>运行【runnable】：running/ready ready–&gt; running</p></li><li><p>无限期等待【waiting】</p></li><li><p>限期等待【timed waiting】</p></li><li><p>阻塞【blocked】</p></li><li><p>结束【terminated】</p></li></ol><h3 id=\"sleep-和-wait-的区别\">sleep 和 wait 的区别<a href=\"2019/10/05/进程与线程#sleep-和-wait-的区别\"></a></h3><p>sleep:</p><p>Thread.sleep(1000);</p><ol><li>线程休眠，让出 CPU，但是不释放对象锁，其他线程无法访问该对象</li></ol><p>wait:</p><p>Object.wait()</p><ol><li><p>让出 CPU，释放对象锁，使得其他线程可以访问该对象</p></li><li><p>进入到对象相关的等待池中</p></li></ol><h3 id=\"notify-和-notifyall-的区别\">notify 和 notifyall 的区别<a href=\"2019/10/05/进程与线程#notify-和-notifyall-的区别\"></a></h3><h3 id=\"yield-函数\">yield 函数<a href=\"2019/10/05/进程与线程#yield-函数\"></a></h3><p>目标线程由运行状态【running】转换为就绪状态【ready】,让出执行权限，让其他线程优先执行，但其他线程是否执行不确定，取决于操作系统</p><h3 id=\"interrupt-函数\">interrupt 函数<a href=\"2019/10/05/进程与线程#interrupt-函数\"></a></h3><h3 id=\"总结\">总结<a href=\"2019/10/05/进程与线程#总结\"></a></h3><p>jdk 源码：hg.openjdk.java.net/jdk8u/jdk8u/jdk/</p><!-- rebuild by neat -->","prev":{"title":"正则表达式","link":"2019/10/15/正则表达式"},"next":{"title":"Java 异常","link":"2019/09/02/Java-异常"},"plink":"https://www.jayli.cn/2019/10/05/进程与线程/","copyright":{"link":"<a href=\"https://www.jayli.cn/2019/10/05/进程与线程/\" title=\"进程与线程\">https://www.jayli.cn/2019/10/05/进程与线程/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","published":"2019年10月5日","author":"Jayli"}}