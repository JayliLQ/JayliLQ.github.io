{"title":"URL编码","date":"2019-08-15T14:24:47.000Z","date_formatted":{"ll":"2019年8月15日","L":"2019/08/15","MM-DD":"08-15"},"link":"2019/08/15/URL编码","tags":["Java"],"categories":["Java"],"updated":"2019-12-02T14:28:13.100Z","content":"<!-- build time:Sun Aug 23 2020 20:59:40 GMT+0800 (GMT+08:00) --><p>URL中文乱码解决方法。<br><a id=\"more\"></a></p><p>encodeURIComponent编码后java后台的解码</p><ul><li>解决方法一：<br>JavaScript：<br>window.self.location=”searchbytext.action?searchtext=”+encodeURIComponent(encodeURIComponent(seartext));<br>java：<br>searchtext=java.net.URLDecoder.decode(searchtext,”UTF-8”);<br>为什么要两次编码的原因：后台java代码给searchtext赋值的时候，本身已经使用了一次解码，不过解码的结果依然不对。所以我们可以在页面上进行两次编码操作，这样后台自动的那次就可以抵消掉一次，然后在使用searchtext=java.net.URLDecoder.decode(searchtext,”UTF-8”);进行一次解码就好了。</li><li>解决方法二：<br>另外还有一种方法是JavaScript进行一次编码，后台java处理时换种想法就好了：<br>java代码：<br>String s = new String(request.getParameter(“name”).getBytes(“ISO8859-1”), “UTF-8”);</li></ul><p>参考资料：<a href=\"https://www.cnblogs.com/qiantuwuliang/archive/2009/07/19/1526687.html\" target=\"_blank\" rel=\"noopener\">escape()、encodeURI()、encodeURIComponent()区别详解</a></p><!-- rebuild by neat -->","prev":{"title":"Web Service","link":"2019/08/16/Web-Service"},"next":{"title":"JVM","link":"2019/08/10/JVM"},"plink":"https://www.jayli.cn/2019/08/15/URL编码/","copyright":{"link":"<a href=\"https://www.jayli.cn/2019/08/15/URL编码/\" title=\"URL编码\">https://www.jayli.cn/2019/08/15/URL编码/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","published":"2019年8月15日","author":"Jayli"}}