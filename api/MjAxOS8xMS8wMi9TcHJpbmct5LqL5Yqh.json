{"title":"Spring 事务","date":"2019-11-02T14:13:54.000Z","date_formatted":{"ll":"2019年11月2日","L":"2019/11/02","MM-DD":"11-02"},"link":"2019/11/02/Spring-事务","tags":["Spring"],"categories":["Java"],"updated":"2019-12-01T14:16:04.598Z","content":"<!-- build time:Sun Aug 23 2020 20:59:40 GMT+0800 (GMT+08:00) --><h2 id=\"Spring-事务不生效\">Spring 事务不生效<a href=\"2019/11/02/Spring-事务#Spring-事务不生效\"></a></h2><ol><li>方法内部调用事务不生效</li><li>抛出一个RuntimeException才能回滚</li><li>调用的方法必须是public，否则事务不起作用</li></ol><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* REQUIRED：如果存在一个事务，则支持当前事务。如果没有事务则开启一个新的事务。</span><br><span class=\"line\">     * REPEATABLE_READ：这种事务隔离级别可以防止脏读，不可重复读。但是可能出现幻像读。它除了保证一个事务不能读取另一个事务未提交的数据外，还保证了避免下面的情况产生(不可重复读)</span><br><span class=\"line\">     * readOnly：不允许只读 <span class=\"string\">rollbackFor:</span>回滚策略为Exception出现异常之后</span><br><span class=\"line\">     * TransactionAspectSupport.currentTransactionStatus().setRollbackOnly(); 函数内捕获异常时需要来设置事务回滚状态</span><br><span class=\"line\">     * Spring Transactional一直是RD的事务神器，但是如果用不好，反会伤了自己。下面总结<span class=\"meta\">@Transactional</span>经常遇到的几个场景: </span><br><span class=\"line\">        <span class=\"meta\">@Transactional</span> 加于<span class=\"keyword\">private</span>方法, 无效</span><br><span class=\"line\">        <span class=\"meta\">@Transactional</span> 加于未加入接口的<span class=\"keyword\">public</span>方法, 再通过普通接口方法调用, 无效</span><br><span class=\"line\">        <span class=\"meta\">@Transactional</span> 加于接口方法, 无论下面调用的是<span class=\"keyword\">private</span>或<span class=\"keyword\">public</span>方法, 都有效</span><br><span class=\"line\">        <span class=\"meta\">@Transactional</span> 加于接口方法后, 被本类普通接口方法直接调用, 无效</span><br><span class=\"line\">        <span class=\"meta\">@Transactional</span> 加于接口方法后, 被本类普通接口方法通过接口调用, 有效</span><br><span class=\"line\">        <span class=\"meta\">@Transactional</span> 加于接口方法后, 被它类的接口方法调用, 有效</span><br><span class=\"line\">        <span class=\"meta\">@Transactional</span> 加于接口方法后, 被它类的私有方法调用后, 有效</span><br></pre></td></tr></table></div></figure><h2 id=\"Java-Error-and-Exception\">Java Error and Exception<a href=\"2019/11/02/Spring-事务#Java-Error-and-Exception\"></a></h2><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">       |<span class=\"string\"> Throwable </span>|</span><br><span class=\"line\">       +-----------+</span><br><span class=\"line\">        /         \\</span><br><span class=\"line\">       /           \\</span><br><span class=\"line\">+-------+          +-----------+</span><br><span class=\"line\">|<span class=\"string\"> Error </span>|<span class=\"string\">          </span>|<span class=\"string\"> Exception </span>|</span><br><span class=\"line\">+-------+          +-----------+</span><br><span class=\"line\"> /  |<span class=\"string\">  \\           / </span>|<span class=\"string\"> \\        \\</span></span><br><span class=\"line\"><span class=\"string\">\\________/       \\______/         \\</span></span><br><span class=\"line\"><span class=\"string\">                              +------------------+</span></span><br><span class=\"line\"><span class=\"string\">unchecked        checked      </span>|<span class=\"string\"> RuntimeException </span>|</span><br><span class=\"line\">                              +------------------+</span><br><span class=\"line\">                               /   |<span class=\"string\">    </span>|<span class=\"string\">      \\</span></span><br><span class=\"line\"><span class=\"string\">                              \\_________________/</span></span><br><span class=\"line\"><span class=\"string\">              </span></span><br><span class=\"line\"><span class=\"string\">                                  unchecked</span></span><br></pre></td></tr></table></div></figure><!-- rebuild by neat -->","prev":{"title":"Spring-Unit-Test","link":"2019/11/03/Spring-Unit-Test"},"next":{"title":"Tomcat 理解","link":"2019/11/01/Tomcat-理解"},"plink":"https://www.jayli.cn/2019/11/02/Spring-事务/","toc":[{"title":"Spring 事务不生效","id":"Spring-事务不生效","index":"1"},{"title":"Java Error and Exception","id":"Java-Error-and-Exception","index":"2"}],"copyright":{"link":"<a href=\"https://www.jayli.cn/2019/11/02/Spring-事务/\" title=\"Spring 事务\">https://www.jayli.cn/2019/11/02/Spring-事务/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","published":"2019年11月2日","author":"Jayli"}}