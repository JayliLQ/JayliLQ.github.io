{"title":"HTTPDNS","date":"2019-06-25T14:49:24.000Z","date_formatted":{"ll":"2019年6月25日","L":"2019/06/25","MM-DD":"06-25"},"link":"2019/06/25/19. HTTPDNS","tags":["网络协议"],"categories":["网络协议"],"updated":"2019-12-01T14:58:19.384Z","content":"<!-- build time:Sun Aug 23 2020 20:59:40 GMT+0800 (GMT+08:00) --><h1 id=\"传统-DNS-的问题\">传统 DNS 的问题<a href=\"2019/06/25/19. HTTPDNS#传统-DNS-的问题\"></a></h1><ul><li>域名缓存问题</li></ul><p><img src=\"https://static001.geekbang.org/resource/image/50/df/50ea6116ce6deadcc1a42587480e3bdf.jpg\" alt=\"\" class=\"article-img\"></p><ul><li>域名转发问题</li></ul><p><img src=\"https://static001.geekbang.org/resource/image/09/41/095d2a687f311d22481b51d97d9a9141.jpg\" alt=\"\" class=\"article-img\"></p><ul><li>出口 NAT(网络地址转换) 问题</li></ul><p>一旦做了网络地址转换，权威的 DNS 服务器就没办法通过 IP 地址，来判断客户到底来自哪个运营商，很可能因为转换后的 IP 地址，误判运营商，导致跨运营商的访问</p><ul><li>域名更新问题</li><li>解析延迟问题</li></ul><h2 id=\"HTTPDNS-的工作模式\">HTTPDNS 的工作模式<a href=\"2019/06/25/19. HTTPDNS#HTTPDNS-的工作模式\"></a></h2><p>不走传统的 DNS 解析，而是自己搭建基于 HTTP 协议的 DNS 服务器集群，分布在多个地点和多个运营商。当客户端需要 DNS 解析的时候，直接通过 HTTP 协议进行请求这个服务器集群，得到就近的地址。</p><p><img src=\"https://static001.geekbang.org/resource/image/91/00/914d44e3d9246804b1b670b216146100.jpg\" alt=\"\" class=\"article-img\"></p><h3 id=\"HTTPDNS-的缓存设计\">HTTPDNS 的缓存设计<a href=\"2019/06/25/19. HTTPDNS#HTTPDNS-的缓存设计\"></a></h3><p><img src=\"https://static001.geekbang.org/resource/image/02/29/022198aa7ac5584330aae0cb35a82f29.jpg\" alt=\"\" class=\"article-img\"></p><ul><li><p>同步更新</p><p>实时性好，但是如果有多个请求都发现过期的时候，同时会请求 HTTPDNS 多次，浪费资源</p><p><img src=\"https://static001.geekbang.org/resource/image/a9/0b/a9ae8782b23c73bcc0c824dcf9fc370b.jpg\" alt=\"\" class=\"article-img\"></p></li><li><p>异步更新</p><p>可以将多个都过期的合并为一个 HTTPDNS 请求，只执行一次，减少 HTTPDNS 的压力。但是更新不实时可能拿到过期数据</p><p><img src=\"https://static001.geekbang.org/resource/image/e3/44/e35240b0992c260602c5cff53299bf44.jpg\" alt=\"\" class=\"article-img\"></p></li></ul><p><img src=\"https://static001.geekbang.org/resource/image/96/cd/962250440c7e0bc39e510d7a9d075acd.jpg\" alt=\"\" class=\"article-img\"></p><ul><li><p>HTTPDNS 调度设计</p><p><img src=\"https://static001.geekbang.org/resource/image/9e/38/9edb73c0e7b369de8784376485427e38.jpg\" alt=\"\" class=\"article-img\"></p></li></ul><p>在客户端，SDK 会收集网络请求数据，如容错率、请求时间等网络请求质量数据，并发送到统计后台，进行分析聚合，以此查看不同的 IP 的服务质量</p><p>在服务端，应用可以通过调用 HTTPDNS 的管理接口，配置不同服务质量的优先级，权重。HTTPDNS 会根据这些策略综合地理位置和线路状况算出一个排序，优先访问当前那些优质的，时延低的 IP 地址</p><h2 id=\"小结\">小结<a href=\"2019/06/25/19. HTTPDNS#小结\"></a></h2><ul><li>传统的 DNS 有很多问题，例如解析慢，更新不及时。因为缓存，转发，NAT 问题导致客户端误会自己所在的位置和运营商，从而影响流量的调度</li><li>HTTPDNS 通过客户端 SDK 和服务端，通过 HTTP 直接调用解析 DNS 的方式，绕过了传统 DNS 的这些缺点，实现了智能调度</li></ul><h2 id=\"思考\">思考<a href=\"2019/06/25/19. HTTPDNS#思考\"></a></h2><ul><li>使用 HTTPDNS，需要向 HTTPDNS 服务器请求解析域名，可是客户端怎么知道 HTTPDNS 服务器的地址或者域名呢？</li><li>HTTPDNS 的只能调度，主要是让客户端选择最近的服务器，而有一种机制，使得资源分发到里客户端更近的位置，从而加快客户端的访问，你知道是什么技术吗？</li></ul><!-- rebuild by neat -->","prev":{"title":"P2P协议","link":"2019/06/25/P2P协议"},"next":{"title":"CDN","link":"2019/06/25/20. CDN"},"plink":"https://www.jayli.cn/2019/06/25/19. HTTPDNS/","toc":[{"title":"传统 DNS 的问题","id":"传统-DNS-的问题","index":"1","children":[{"title":"HTTPDNS 的工作模式","id":"HTTPDNS-的工作模式","index":"1.1","children":[{"title":"HTTPDNS 的缓存设计","id":"HTTPDNS-的缓存设计","index":"1.1.1"}]},{"title":"小结","id":"小结","index":"1.2"},{"title":"思考","id":"思考","index":"1.3"}]}],"copyright":{"link":"<a href=\"https://www.jayli.cn/2019/06/25/19. HTTPDNS/\" title=\"HTTPDNS\">https://www.jayli.cn/2019/06/25/19. HTTPDNS/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","published":"2019年6月25日","author":"Jayli"}}