{"title":"加密算法","date":"2019-10-25T15:15:14.000Z","date_formatted":{"ll":"2019年10月25日","L":"2019/10/25","MM-DD":"10-25"},"link":"2019/10/25/加密算法","tags":["网络协议,加密,TLS/SSL"],"categories":["网络协议"],"updated":"2019-12-01T15:16:51.510Z","content":"<!-- build time:Sun Aug 23 2020 21:12:13 GMT+0800 (GMT+08:00) --><p>加密算法学习<br><a id=\"more\"></a></p><h2 id=\"对称加密算法\">对称加密算法<a href=\"2019/10/25/加密算法#对称加密算法\"></a></h2><p>用同一个密钥加密和解密，速度快，适合给大量数据加密</p><ul><li>DES</li><li>3DES：DES 的衍生</li><li>AES （支持三种长度的密钥）<ul><li>AES256：安全性最高</li><li>AES192</li><li>AES128：性能最高</li></ul></li></ul><h2 id=\"非对称加密算法\">非对称加密算法<a href=\"2019/10/25/加密算法#非对称加密算法\"></a></h2><p>公钥加密，私钥解密；私钥签名，公钥验签。和对称加密相比，安全性高，速度较慢</p><ul><li>RSA</li><li>DSA</li><li>ECC</li></ul><h2 id=\"散列算法（签名算法）\">散列算法（签名算法）<a href=\"2019/10/25/加密算法#散列算法（签名算法）\"></a></h2><p>加密不可逆，能确定消息的不可抵赖性，能保障消息的完整性。<br>主要用于身份验证：文件校验，数字签名，授权协议。</p><ul><li>MD5</li><li>SHA1：160 位的哈希值</li><li>SHA2：SHA1 的衍生，有多种不同的位数<ul><li>SHA512</li><li>SHA384</li><li>SHA256</li><li>SHA224</li></ul></li><li>HMAC</li></ul><h2 id=\"其他常用算法\">其他常用算法<a href=\"2019/10/25/加密算法#其他常用算法\"></a></h2><ul><li>Base64</li><li>HTTPS</li></ul><h2 id=\"SSL-证书（HTTPS）背后的加密算法\">SSL 证书（HTTPS）背后的加密算法<a href=\"2019/10/25/加密算法#SSL-证书（HTTPS）背后的加密算法\"></a></h2><ul><li>参考 <a href=\"https://www.cnblogs.com/cioliuguilan/p/5518798.html\" target=\"_blank\" rel=\"noopener\">SSL证书(HTTPS)背后的加密算法</a></li></ul><p><img src=\"http://www.evtrust.com/knowledge/images/https.png\" alt=\"\" class=\"article-img\"></p><blockquote><ul><li>浏览器把自身支持的一系列Cipher Suite（密钥算法套件，后文简称Cipher）[C1,C2,C3, …]发给服务器；</li><li>服务器接收到浏览器的所有Cipher后，与自己支持的套件作对比，如果找到双方都支持的Cipher，则告知浏览器；</li><li>浏览器与服务器使用匹配的Cipher进行后续通信。如果服务器没有找到匹配的算法，浏览器（以Firefox 30为例，后续例子中使用的浏览器均为此版本的Firefox）将给出错误信息</li></ul></blockquote><ul><li><p>密钥算法套件（Cipher Suite）</p><ul><li>查看浏览器支持的 Cipher：打开Firefox浏览器，在地址栏中输入about:config，然后搜索tls.version</li><li>查看服务器支持的 Cipher：以Windows为例。若要查看操作系统支持哪些密钥算法，可以运行gpedit.msc，依次进入”Computer Configuration” -&gt; ”Administrative Templates” -&gt; “Network” -&gt; “SSL Configuration Settings”</li><li>Cipher 名称含义：<ul><li>密钥交换算法，用于决定客户端与服务器之间在握手的过程中如何认证，用到的算法包括RSA，Diffie-Hellman，ECDH，PSK等</li><li>加密算法，用于加密消息流，该名称后通常会带有两个数字，分别表示密钥的长度和初始向量的长度，比如DES 56/56, RC2 56/128, RC4 128/128, AES 128/128, AES 256/256</li><li>报文认证信息码（MAC）算法，用于创建报文摘要，确保消息的完整性（没有被篡改），算法包括MD5，SHA等。</li><li>PRF（伪随机数函数），用于生成“master secret”。</li></ul></li><li>例如：</li></ul><blockquote><p>TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA</p><ul><li>基于TLS协议的；</li><li>使用ECDHE、RSA作为密钥交换算法；</li><li>加密算法是AES（密钥和初始向量的长度都是256）；</li><li>MAC算法（这里就是哈希算法）是SHA。</li></ul></blockquote></li></ul><h2 id=\"参考\">参考<a href=\"2019/10/25/加密算法#参考\"></a></h2><p><a href=\"http://www.evtrust.com/knowledge/cryptography.html\" target=\"_blank\" rel=\"noopener\">密码技术</a></p><!-- rebuild by neat -->","prev":{"title":"Tomcat 理解","link":"2019/11/01/Tomcat-理解"},"next":{"title":"正则表达式","link":"2019/10/15/正则表达式"},"plink":"https://www.jayli.cn/2019/10/25/加密算法/","toc":[{"title":"对称加密算法","id":"对称加密算法","index":"1"},{"title":"非对称加密算法","id":"非对称加密算法","index":"2"},{"title":"散列算法（签名算法）","id":"散列算法（签名算法）","index":"3"},{"title":"其他常用算法","id":"其他常用算法","index":"4"},{"title":"SSL 证书（HTTPS）背后的加密算法","id":"SSL-证书（HTTPS）背后的加密算法","index":"5"},{"title":"参考","id":"参考","index":"6"}],"copyright":{"link":"<a href=\"https://www.jayli.cn/2019/10/25/加密算法/\" title=\"加密算法\">https://www.jayli.cn/2019/10/25/加密算法/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","published":"2019年10月25日","author":"Jayli"}}